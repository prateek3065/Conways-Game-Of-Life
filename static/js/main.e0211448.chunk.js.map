{"version":3,"sources":["Board.js","Modal.js","Patterns.js","PatternSelections.js","ModalForPattern.js","App.js","index.js"],"names":["isSimulation2DoneExecuting","numCols","undefined","numRows","grid","setGrid","buttonText","Board","props","simulate2","delayTime","sleep","ms","Promise","resolve","setTimeout","a","newGrid","i","j","push","flag","alives","neighbours_Alive_Dead","arr","OVERLAY_STYLES","position","top","left","right","bottom","backgroundColor","zindex","Modal","open","setIsOpen","children","ReactDom","createPortal","style","className","onClick","document","getElementById","PATTERN_GRIDS","gosper","min_rows","min_cols","pulsar","blinker","beacon","pentadecathlon","glider","lwss","mwss","hwss","test","Patterns","setreRender","patternSelectedFromModal","Object","entries","key1","val1","key2","val2","setPattern","key","val","console","log","length","prev","PatternSelections","isModalForPatterSelectionOpen","setOpenModalForPatternSelection","setPatternSelectedFromModal","handleClick","patternNmae","id","ModalForPattern","start_info","App","useState","setButtonText","reRender","rows","Array","from","modalInfo","setModalInfo","setDelayTime","useEffect","isOpen","handleReset","type","gridTemplateColumns","map","col","changeState","width","height","border","element","uuid","href","window","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e0211448.chunk.js","sourcesContent":["import React from \"react\";\nvar isSimulation2DoneExecuting = true;\nvar numCols = undefined;\nvar numRows = undefined;\nvar grid = undefined;\nvar setGrid = undefined;\nvar buttonText = undefined;\nexport default function Board(props) {\n  numRows = props.numRows;\n  numCols = props.numCols;\n  grid = props.grid;\n  setGrid = props.setGrid;\n  buttonText = props.buttonText;\n  if (isSimulation2DoneExecuting && buttonText === \"Stop\") {\n    //console.log('if')\n    isSimulation2DoneExecuting = false;\n    simulate2(props.delayTime);\n  }\n  return <></>;\n}\n/*\nasync function tutor()\n{\n   console.log('Hello')\n   for(let i=0; i<=10; i++)\n     {\n         //await sleep(2000)\n         //console.log(`i=${i}`)\n     }\n     //isTutorDoneExecuting=true\n}\n*/\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nasync function simulate2(delayTime) {\n  await sleep(delayTime);\n  var newGrid = [];\n  for (let i = 0; i < numRows; i++) {\n    var a = [];\n    for (let j = 0; j < numCols; j++) {\n      a[j] = grid[i][j];\n    }\n    newGrid.push(a);\n  }\n  let flag = false;\n  for (let i = 1; i < numRows - 1; i++) {\n    for (let j = 1; j < numCols - 1; j++) {\n      let alives = neighbours_Alive_Dead(grid, i, j);\n\n      if (alives > 0) {\n        //console.log(`(i,j)=(${i},${j}) alives=${alives}`)\n        //console.log(grid)\n        //console.log(newGrid)\n      }\n      if (alives > 0) flag = true;\n\n      if (grid[i][j] === 1) {\n        if (alives < 2 || alives > 3) newGrid[i][j] = 0;\n        else if (alives === 2 || alives === 3) flag = true;\n      } else {\n        if (alives === 3) newGrid[i][j] = 1;\n      }\n    }\n  }\n  isSimulation2DoneExecuting = true;\n  if (flag) {\n    setGrid(newGrid);\n  }\n}\n\nfunction neighbours_Alive_Dead(arr, i, j) {\n  let alives = 0;\n  if (arr[i - 1][j - 1] === 1) alives++;\n  if (arr[i - 1][j] === 1) alives++;\n  if (arr[i - 1][j + 1] === 1) alives++;\n  if (arr[i][j - 1] === 1) alives++;\n  if (arr[i][j + 1] === 1) alives++;\n  if (arr[i + 1][j - 1] === 1) alives++;\n  if (arr[i + 1][j] === 1) alives++;\n  if (arr[i + 1][j + 1] === 1) alives++;\n  return alives;\n}\n\n//changes\n","import React from \"react-dom\";\nimport ReactDom from \"react-dom\";\nimport \"./style.css\";\n/*\nconst MODAL_STYLES={\n    position: 'fixed',\n    top:'40%',\n    left:'50%',\n    transform: 'translate(-50%,-50%)',\n    width:'600px',\n    padding: '50px',\n    boxshadow: '0 5px 30px rgba(0,0,0,.3)',\n    animation: 'fadeInAnimation ease 3s',\n    backgroundColor: 'lightgreen',\n    transition:'0.5s',\n    opacity: 1,\n    zindex: 1000,\n    overflow:'scroll'\n} */\nconst OVERLAY_STYLES = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: \"rgba(0,0,0,0.7)\",\n  zindex: 1000,\n};\nexport default function Modal({ open, setIsOpen, children }) {\n  if (!open) return null;\n  function handleMclick() {\n    setIsOpen(false);\n  }\n  return ReactDom.createPortal(\n    <>\n      <div style={OVERLAY_STYLES}></div>\n      <div className=\"MODAL_STYLES\">\n        {children}\n\n        <button onClick={() => handleMclick()}>Close</button>\n      </div>{\" \"}\n    </>,\n    document.getElementById(\"portal\")\n  );\n}\n\n/*\n<p>The universe of the Game of Life is an infinite, two-dimensional orthogonal grid of square cells, each of which is in one of two possible states, live or dead, (or populated and unpopulated, respectively). Every cell interacts with its eight neighbours, which are the cells that are horizontally, vertically, or diagonally adjacent. At each step in time, the following transitions occur:</p>\n            <p>Any live cell with fewer than two live neighbours dies, as if by underpopulation.</p>\n            <p>Any live cell with two or three live neighbours lives on to the next generation.</p>\n            <p>Any live cell with more than three live neighbours dies, as if by overpopulation.</p>\n            <p>Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.</p>\n*/\n//changes\n","const PATTERN_GRIDS = {\n  gosper: {\n    grid: [\n      [0, -6],\n      [-1, -5],\n      [-1, -6],\n      [-1, -7],\n      [-2, -4],\n      [-2, -8],\n      [-3, -6],\n      [-4, -3],\n      [-5, -3],\n      [-6, -4],\n      [-7, -5],\n      [-7, -6],\n      [-7, -7],\n      [-4, -9],\n      [-5, -9],\n      [-6, -8],\n      [-16, -6],\n      [-16, -7],\n      [-17, -6],\n      [-17, -7],\n      [3, -7],\n      [3, -8],\n      [3, -9],\n      [4, -7],\n      [4, -8],\n      [4, -9],\n      [5, -6],\n      [5, -10],\n      [7, -5],\n      [7, -6],\n      [7, -10],\n      [7, -11],\n      [17, -8],\n      [17, -9],\n      [18, -8],\n      [18, -9],\n    ],\n    min_rows: 22,\n    min_cols: 36,\n  },\n  pulsar: {\n    grid: [\n      [-1, 2],\n      [-1, 3],\n      [-1, 4],\n      [-1, -2],\n      [-1, -3],\n      [-1, -4],\n      [1, 2],\n      [1, 3],\n      [1, 4],\n      [1, -2],\n      [1, -3],\n      [1, -4],\n      [2, 1],\n      [3, 1],\n      [4, 1],\n      [-2, 1],\n      [-3, 1],\n      [-4, 1],\n      [2, -1],\n      [3, -1],\n      [4, -1],\n      [-2, -1],\n      [-3, -1],\n      [-4, -1],\n      [2, 6],\n      [3, 6],\n      [4, 6],\n      [-2, 6],\n      [-3, 6],\n      [-4, 6],\n      [2, -6],\n      [3, -6],\n      [4, -6],\n      [-2, -6],\n      [-3, -6],\n      [-4, -6],\n      [-6, 2],\n      [-6, 3],\n      [-6, 4],\n      [-6, -2],\n      [-6, -3],\n      [-6, -4],\n      [6, 2],\n      [6, 3],\n      [6, 4],\n      [6, -2],\n      [6, -3],\n      [6, -4],\n    ],\n    min_rows: 8,\n    min_cols: 8,\n  },\n  blinker: {\n    grid: [\n      [1, 0],\n      [0, 0],\n      [-1, 0],\n    ],\n\n    min_rows: 6,\n    min_cols: 6,\n  },\n  beacon: {\n    grid: [\n      [0, 0],\n      [-1, 0],\n      [-1, -1],\n      [0, -1],\n      [1, 1],\n      [1, 2],\n      [2, 1],\n      [2, 2],\n    ],\n    min_rows: 6,\n    min_cols: 6,\n  },\n  pentadecathlon: {\n    grid: [\n      [0, 0],\n      [0, 1],\n      [0, 2],\n      [0, 4],\n      [0, 5],\n      [0, -1],\n      [0, -3],\n      [0, -4],\n      [1, 3],\n      [1, -2],\n      [-1, 3],\n      [-1, -2],\n    ],\n    min_rows: 16,\n    min_cols: 10,\n  },\n  glider: {\n    grid: [\n      [-1, 1],\n      [0, 1],\n      [1, 1],\n      [1, 0],\n      [0, -1],\n    ],\n    min_rows: 5,\n    min_cols: 5,\n  },\n  lwss: {\n    grid: [\n      [-2, -1],\n      [-2, 1],\n      [-1, 2],\n      [0, 2],\n      [1, 2],\n      [1, -1],\n      [2, 0],\n      [2, 1],\n      [2, 2],\n    ],\n    min_rows: 7,\n    min_cols: 6,\n  },\n  mwss: {\n    grid: [\n      [-3, 0],\n      [-3, 1],\n      [-3, 2],\n      [-2, -1],\n      [-2, 2],\n      [-1, 2],\n      [0, -2],\n      [0, 2],\n      [1, 2],\n      [2, 1],\n      [2, -1],\n    ],\n    min_rows: 7,\n    min_cols: 8,\n  },\n  hwss: {\n    grid: [\n      [-3, 0],\n      [-3, 1],\n      [-3, 2],\n      [-2, -1],\n      [-2, 2],\n      [-1, 2],\n      [0, -2],\n      [0, 2],\n      [1, -2],\n      [1, 2],\n      [2, 2],\n      [3, 1],\n      [3, -1],\n    ],\n    min_rows: 7,\n    min_cols: 9,\n  },\n  test: { grid: [[0, 0]], min_rows: 1, min_cols: 1 },\n};\nexport default function Patterns({\n  grid,\n  setGrid,\n  setreRender,\n  patternSelectedFromModal,\n}) {\n  if (patternSelectedFromModal === \"\") return;\n  for (const [key1, val1] of Object.entries(PATTERN_GRIDS)) {\n    if (key1 !== patternSelectedFromModal) continue;\n    for (const [key2, val2] of Object.entries(val1)) {\n      if (key2 === \"grid\") {\n        setPattern({ grid, setGrid, val2, setreRender });\n      }\n    }\n  }\n}\n\nfunction setPattern({ grid, setGrid, val2, setreRender }) {\n  var newGrid = grid;\n  for (const [key, val] of Object.entries(val2)) {\n    console.log(key);\n    newGrid[val[0] + grid.length / 2][val[1] + grid[0].length / 2] = 1;\n    //console.log(val);\n  }\n  //console.log(newGrid);\n  setGrid(newGrid);\n  setreRender((prev) => prev + 1);\n}\n","import React from \"react\";\nexport default function PatternSelections({\n  isModalForPatterSelectionOpen,\n  setOpenModalForPatternSelection,\n  patternSelectedFromModal,\n  setPatternSelectedFromModal,\n  Patterns,\n  setreRender,\n  grid,\n  setGrid,\n}) {\n  function handleClick(patternNmae) {\n    //setPatternSelectedFromModal(patternNmae);\n    var newGrid = grid;\n    for (let i = 1; i < grid.length - 2; i++) {\n      for (let j = 1; j < grid[0].length - 2; j++) newGrid[i][j] = 0;\n    }\n    setGrid(newGrid);\n    patternSelectedFromModal = patternNmae;\n    setOpenModalForPatternSelection(false);\n    setreRender((prev) => prev + 1);\n    Patterns({ grid, setGrid, setreRender, patternSelectedFromModal });\n  }\n  return (\n    <div>\n      <div id=\"pattern-selection\">\n        <button className=\"buttons\" onClick={() => handleClick(\"gosper\")}>\n          gosper\n        </button>\n        <button className=\"buttons\" onClick={() => handleClick(\"pulsar\")}>\n          pulsar\n        </button>\n        <button className=\"buttons\" onClick={() => handleClick(\"blinker\")}>\n          blinker\n        </button>\n        <button className=\"buttons\" onClick={() => handleClick(\"beacon\")}>\n          beacon\n        </button>\n        <button\n          className=\"buttons\"\n          onClick={() => handleClick(\"pentadecathlon\")}\n        >\n          pentadecathlon\n        </button>\n        <button className=\"buttons\" onClick={() => handleClick(\"glider\")}>\n          glider\n        </button>\n        <button className=\"buttons\" onClick={() => handleClick(\"lwss\")}>\n          lawss\n        </button>\n        <button className=\"buttons\" onClick={() => handleClick(\"mwss\")}>\n          mawss\n        </button>\n        <button className=\"buttons\" onClick={() => handleClick(\"hwss\")}>\n          hwss\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react-dom\";\nimport ReactDom from \"react-dom\";\nimport \"./style.css\";\nimport PatternSelections from \"./PatternSelections\";\nconst OVERLAY_STYLES = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: \"rgba(0,0,0,0.7)\",\n  zindex: 1000,\n};\nexport default function ModalForPattern({\n  isModalForPatterSelectionOpen,\n  setOpenModalForPatternSelection,\n  patternSelectedFromModal,\n  setPatternSelectedFromModal,\n  Patterns,\n  setreRender,\n  grid,\n  setGrid,\n}) {\n  if (!isModalForPatterSelectionOpen) return null;\n\n  return ReactDom.createPortal(\n    <>\n      <div style={OVERLAY_STYLES}></div>\n      <div className=\"MODAL_STYLES\">\n        <PatternSelections\n          isModalForPatterSelectionOpen={isModalForPatterSelectionOpen}\n          setOpenModalForPatternSelection={setOpenModalForPatternSelection}\n          patternSelectedFromModal={patternSelectedFromModal}\n          setPatternSelectedFromModal={setPatternSelectedFromModal}\n          Patterns={Patterns}\n          setreRender={setreRender}\n          grid={grid}\n          setGrid={setGrid}\n        />\n      </div>{\" \"}\n    </>,\n    document.getElementById(\"portal2\")\n  );\n}\n","import { React, useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport Modal from \"./Modal\";\nimport { v4 as uuid } from \"uuid\";\nimport Patterns from \"./Patterns\";\nimport ModalForPattern from \"./ModalForPattern\";\nconst numRows = 70;\nconst numCols = 70;\nvar start_info = [\n  \"The universe of the Game of Life is an infinite, two-dimensional orthogonal grid of square cells, each of which is in one of two possible states, live or dead, (or populated and unpopulated, respectively). Every cell interacts with its eight neighbours, which are the cells that are horizontally, vertically, or diagonally adjacent. At each step in time, the following transitions occur\",\n  \"1. Any live cell with fewer than two live neighbours dies, as if by underpopulation.\",\n  \"2. Any live cell with two or three live neighbours lives on to the next generation.\",\n  \"3. Any live cell with more than three live neighbours dies, as if by overpopulation.\",\n  \"4. Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\",\n];\n\nconst App = () => {\n  //console.log(iteration)\n  const [buttonText, setButtonText] = useState(() => \"Start\");\n  const [reRender, setreRender] = useState(() => {\n    return 1;\n  });\n  const [grid, setGrid] = useState(() => {\n    const rows = [];\n    for (let i = 0; i < numRows; i++)\n      rows.push(Array.from(Array(numCols), () => 0));\n\n    for (let i = 0; i < numRows; i++) {\n      rows[0][i] = 2;\n      rows[numRows - 1][i] = 2;\n      rows[i][0] = 2;\n      rows[i][numCols - 1] = 2;\n    }\n    return rows;\n  });\n\n  const [modalInfo, setModalInfo] = useState(() => {\n    return start_info;\n  });\n\n  const [delayTime, setDelayTime] = useState(() => {\n    return 100;\n  });\n\n  function changeState(i, j) {\n    if (buttonText === \"Stop\") {\n      setIsOpen(true);\n      setModalInfo([\"Please Stop the game before adding any Life\"]);\n    } else {\n      const newGrid = grid;\n      newGrid[i][j] = grid[i][j] === 1 ? 0 : 1;\n      setGrid(newGrid);\n      setreRender((prev) => {\n        return (prev + 1) % 1000;\n      });\n    }\n  }\n\n  useEffect(() => {}, [reRender]);\n\n  function handleClick() {\n    if (buttonText === \"Start\") setButtonText(\"Stop\");\n    else setButtonText(\"Start\");\n    setreRender((prev) => {\n      return (prev + 1) % 1000;\n    });\n  }\n\n  const [isOpen, setIsOpen] = useState(() => {\n    return true;\n  });\n\n  function handleReset() {\n    var newGrid = grid;\n    for (let i = 0; i < numRows; i++) {\n      for (let j = 0; j < numCols; j++) {\n        if (i === 0 || j === 0 || i === numRows - 1 || j === numCols - 1)\n          newGrid[i][j] = 2;\n        else newGrid[i][j] = 0;\n      }\n    }\n    setGrid(newGrid);\n    setreRender((prev) => prev + 1);\n  }\n\n  function infoRequest() {\n    setModalInfo(start_info);\n    setIsOpen(true);\n  }\n  const [isModalForPatterSelectionOpen, setOpenModalForPatternSelection] =\n    useState(() => false);\n\n  const [patternSelectedFromModal, setPatternSelectedFromModal] = useState(\n    () => \"\"\n  );\n  function selectPattern() {\n    setOpenModalForPatternSelection(true);\n    //debugger;\n\n    //debugger;\n  }\n  //console.log('Re-rendering')\n  function goToLinkedin() {\n    console.log(\"clicked\");\n    window.open(\"https://www.linkedin.com/in/prateek-sharma-891721196/\");\n  }\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"buttons-bar\">\n          <button\n            className=\"buttons\"\n            id=\"button-reset\"\n            onClick={() => {\n              handleReset();\n            }}\n          >\n            Reset Board\n          </button>\n\n          <button\n            className=\"buttons\"\n            onClick={() => setDelayTime((prev) => prev + 100)}\n          >\n            Slow\n          </button>\n          <button\n            className=\"buttons\"\n            onClick={() => setDelayTime((prev) => prev - 100)}\n          >\n            Fast\n          </button>\n          <button className=\"buttons\" onClick={() => selectPattern()}>\n            Select Patterns\n          </button>\n          <button\n            className=\"buttons\"\n            id=\"button-info-request\"\n            onClick={() => infoRequest()}\n          >\n            Info About the Game\n          </button>\n        </div>\n        <div className=\"buttons-bar\" id=\"start-button-bar\">\n          <input className=\"checkbox\" type=\"checkbox\" onClick={handleClick} />\n        </div>\n        <div\n          className=\"board\"\n          style={{\n            gridTemplateColumns: `repeat(${numCols},10px)`,\n          }}\n        >\n          {grid.map((rows, i) =>\n            rows.map((col, j) => (\n              <div\n                onClick={() => {\n                  changeState(i, j);\n                }}\n                key={`${i}-${j}`}\n                style={{\n                  width: \"10px\",\n                  height: \"10px\",\n                  backgroundColor:\n                    grid[i][j] === 1\n                      ? \"green\"\n                      : grid[i][j] === 2\n                      ? \"lightgrey\"\n                      : \"white\",\n                  border: \"solid 1px black\",\n                }}\n              />\n            ))\n          )}\n          <Board\n            numRows={numRows}\n            numCols={numCols}\n            grid={grid}\n            setGrid={setGrid}\n            buttonText={buttonText}\n            delayTime={delayTime}\n          />\n          <Modal open={isOpen} setIsOpen={setIsOpen}>\n            {modalInfo.map((element) => {\n              return <div key={uuid()}>{element}</div>;\n            })}\n          </Modal>\n          <ModalForPattern\n            isModalForPatterSelectionOpen={isModalForPatterSelectionOpen}\n            setOpenModalForPatternSelection={setOpenModalForPatternSelection}\n            patternSelectedFromModal={patternSelectedFromModal}\n            setPatternSelectedFromModal={setPatternSelectedFromModal}\n            Patterns={Patterns}\n            setreRender={setreRender}\n            grid={grid}\n            setGrid={setGrid}\n          />\n        </div>\n      </div>\n      <div className=\"footer\">\n        <div className=\"footer-tag\">\n          <h1>Project build by Prateek</h1>\n          <h1>\n            For more information regarding Conways-Game-Of-Life Click below\n          </h1>\n          <a\n            className=\"links\"\n            href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\"\n          >\n            Link\n          </a>\n        </div>\n        <div className=\"linkedin-icon\">\n          <i className=\"fa fa-linkedin-square\" onClick={() => goToLinkedin()} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n//Patterns({ grid, setGrid, setreRender })\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//changes"],"sourceRoot":""}